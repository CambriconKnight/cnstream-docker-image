# -------------------------------------------------------------------------------
# Filename:     Dockerfile
# UpdateDate:   2022/11/26
# Description:  Build docker images for cnstream.
# Example:
# Depends:      Based on Ubuntu 18.04
# Notes:
# -------------------------------------------------------------------------------
# 0.Start FROM ubuntu:18.04 image
FROM ubuntu:18.04

MAINTAINER CambriconKnight <cambricon_knight@163.com>

ARG cntoolkit_package=cntoolkit_1.7.14-1.ubuntu18.04_amd64.deb
ARG mlu_platform=MLU270
ARG with_cntoolkit_installed=yes

ARG cncv_package=cncv_0.4.602-1.ubuntu18.04_amd64.deb
ARG with_cncv_installed=yes

# 1.Sync files
RUN echo -e 'nameserver 114.114.114.114' > /etc/resolv.conf
COPY ./docker/* /temp/
WORKDIR /temp/
RUN cp sources_18.04.list /etc/apt/sources.list

# 2.Pre-installed software
ENV DEBIAN_FRONTEND=noninteractive
RUN bash ./pre_packages18.04.sh

# 3.Set ENV && Clean
ENV LANG C.UTF-8
ENV TIME_ZONE Asia/Shanghai
RUN echo "${TIME_ZONE}" > /etc/timezone && \
    ln -sf /usr/share/zoneinfo/${TIME_ZONE} /etc/localtime && \
    rm -rf /temp/ && rm -rf /var/lib/apt/lists/* && \
    apt-get clean

# 4.Sync files for cnstream
WORKDIR /root/cnstream/
COPY ./cnstream /root/cnstream/
COPY ./docker/install_cntoolkit.sh /root/cnstream/
RUN if [ "$with_cntoolkit_installed" = "yes" ]; then bash ./install_cntoolkit.sh ${cntoolkit_package} \
    && rm -rf /root/cnstream/${cntoolkit_package}; fi
RUN if [ "$with_cncv_installed" = "yes" ]; then dpkg -i /root/cnstream/${cncv_package} \
    && rm -rf /root/cnstream/${cncv_package}; fi

# 5.Pre-installed software
COPY ./docker/build_cnstream.sh /root/cnstream/
RUN bash ./build_cnstream.sh

# 6.Set WorkDir
ENV NEUWARE_HOME=/usr/local/neuware
ENV LD_LIBRARY_PATH=${LD_LIBRARY_PATH}:${NEUWARE_HOME}/lib64
ENV LD_LIBRARY_PATH=$LD_LIBRARY_PATH:/usr/local/lib
ENV WORK_DIR=/root/cnstream
WORKDIR /root/cnstream